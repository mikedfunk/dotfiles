#!/usr/env/bin bash

# Modeline and Notes {{{
# vim: set sw=4 ts=4 sts=4 et tw=78 foldmethod=marker filetype=sh:
#
#  ___  ____ _         ______           _
#  |  \/  (_) |        |  ___|         | |
#  | .  . |_| | _____  | |_ _   _ _ __ | | __
#  | |\/| | | |/ / _ \ |  _| | | | '_ \| |/ /
#  | |  | | |   <  __/ | | | |_| | | | |   <
#  \_|  |_/_|_|\_\___| \_|  \__,_|_| |_|_|\_\
#
# bash paths
# more info at http://mikefunk.com
# }}}

# for vagrant
if [ -d /Applications/VirtualBox.app/Contents/MacOS/ ]; then
    export PATH="/Applications/VirtualBox.app/Contents/MacOS:$PATH"
fi

# liip php
if [ -d /usr/local/php5/bin ]; then
    export PATH="/usr/local/php5/bin:$PATH"
fi

# homebrew php
if [[ -d "/usr/local/opt/php56/bin:$PATH" ]]; then
    export PATH="/usr/local/opt/php56/bin:$PATH"
fi
if [[ -d "/usr/local/opt/php70/bin:$PATH" ]]; then
    export PATH="/usr/local/opt/php70/bin:$PATH"
fi

# local bin
if [ -d "/usr/local/bin" ] ; then
    export PATH="/usr/local/bin:$PATH"
fi

# local sbin
if [ -d "/usr/local/sbin" ] ; then
    export PATH="/usr/local/sbin:$PATH"
fi

# home bin
if [ -d "$HOME/bin" ] ; then
    export PATH="$HOME/bin:$PATH"
fi
if [ -d "$HOME/.bin" ] ; then
    export PATH="$HOME/.bin:$PATH"
fi

# composer global
if [ -d ~/.composer/vendor/bin ]; then
    export PATH="$HOME/.composer/vendor/bin:$PATH"
fi

# composer relative bin
# if [ -d ./vendor/bin ]; then
    # export PATH="./vendor/bin:$PATH"
# fi

# npm relative bin
# if [ -d ./node_modules/.bin ]; then
    # export PATH="./node_modules/.bin:$PATH"
# fi

# rbenv
export RBENV_ROOT="${HOME}/.rbenv"
if [ -d "${RBENV_ROOT}" ]; then
  export PATH="${RBENV_ROOT}/bin:${PATH}"
  eval "$(rbenv init -)"
fi

# tmux bash completion
if [ -f "/usr/local/Cellar/tmux/1.8/etc/bash_completion.d/tmux" ]; then
    export PATH="/usr/local/Cellar/tmux/1.8/etc/bash_completion.d/tmux:$PATH"
fi

# mac bash git completion
if [ -f "/usr/local/etc/bash_completion" ] && [[  $0 == "bash" ]]; then
  . /usr/local/etc/bash_completion
fi

# ubuntu bash completion
# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# if homebrew installed
if [ -f "/usr/local/bin/brew" ]; then

    # add ruby gems to PATH
    export PATH=$(brew --prefix ruby)/bin:$PATH

    # source homebrew bash completion
    # if [ -f $(brew --prefix)/etc/bash_completion ]; then
        # . $(brew --prefix)/etc/bash_completion
    # fi
fi

# add to manpath for ranger manual to show up
if [ -f "$MANPATH:/usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/share/man" ]; then
    export MANPATH=$MANPATH:/usr/local/Cellar/python/2.7.4/Frameworks/Python.framework/Versions/2.7/share/man
fi

# generic colorizer
if [ -f /usr/local/etc/grc.bashrc ]; then
    source "/usr/local/etc/grc.bashrc"
fi

# teamocil completion
if type "teamocil" &> /dev/null; then
    complete -W "$(teamocil --list)" teamocil
fi

# zombie.js doesn't work without this
export NODE_PATH="/usr/local/lib/node_modules"

# golang
if [ -d "/usr/local/go" ]; then
    export GOPATH="/usr/local/go"
    export PATH="$GOPATH/bin:$PATH"
fi
# GOROOT-based install location from homebrew go
if [ -d "/usr/local/opt/go/libexec/bin" ]; then
    export PATH=$PATH:/usr/local/opt/go/libexec/bin
fi

# postgresql app on mac
if [ -d "/Applications/Postgres.app/Contents/Versions/9.4/bin" ]; then
    export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.4/bin
fi

# Setting PATH for Python 2.7
PATH="/Library/Frameworks/Python.framework/Versions/2.7/bin:${PATH}"

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting

# prepend composer path
PATH="$PWD/vendor/bin:${PATH}"

# prepend local npm path
PATH="$PWD/node_modules/.bin:${PATH}"

export PATH="$PATH"
