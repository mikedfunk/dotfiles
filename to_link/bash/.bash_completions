#!/usr/env/bin bash

# Modeline and Notes {{{
# vim: set sw=4 ts=4 sts=4 et tw=78 foldmethod=marker filetype=sh:
#
#  ___  ____ _         ______           _
#  |  \/  (_) |        |  ___|         | |
#  | .  . |_| | _____  | |_ _   _ _ __ | | __
#  | |\/| | | |/ / _ \ |  _| | | | '_ \| |/ /
#  | |  | | |   <  __/ | | | |_| | | | |   <
#  \_|  |_/_|_|\_\___| \_|  \__,_|_| |_|_|\_\
#
# bash completions
# more info at http://mikefunk.com
# }}}

# source bash completions
[ -d ~/.dotfiles/to_link/bash/bash_completion.d ] && for f in ~/.dotfiles/to_link/bash/bash_completion.d/*; do source $f; done

# some extra completions that don't go in bash_completion.d
[ -f "/etc/bash_completion" ] && source /etc/bash_completion
[[ "$(type -P grunt)" ]] && eval "$(grunt --completion=bash)"

# Cannot find local karma!
# eval "$(karma completion)"

# fails to find 'have' command in ubuntu
# [ -d /etc/bash_completion.d ] && for f in /etc/bash_completion.d/*; do source $f; done

# ubuntu y u no find this?
[ -f "/etc/bash_completion.d/git-prompt" ] && . /etc/bash_completion.d/git-prompt

# do git completion with g
__git_complete g __git_main

# teamocil
[[ "$(type -P teamocil)" ]] && complete -W "$(teamocil --list)" teamocil


# about-plugin 'set up vagrant autocompletion'
_vagrant()
{
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    commands="box destroy halt help init package provision reload resume ssh ssh_config status suspend up version"

    if [ $COMP_CWORD == 1 ]
    then
      COMPREPLY=($(compgen -W "${commands}" -- ${cur}))
      return 0
    fi

    if [ $COMP_CWORD == 2 ]
    then
        case "$prev" in
            "box")
              box_commands="add help list remove repackage"
              COMPREPLY=($(compgen -W "${box_commands}" -- ${cur}))
              return 0
            ;;
            "help")
              COMPREPLY=($(compgen -W "${commands}" -- ${cur}))
              return 0
            ;;
            *)
            ;;
        esac
    fi

    if [ $COMP_CWORD == 3 ]
    then
      action="${COMP_WORDS[COMP_CWORD-2]}"
      if [ $action == 'box' ]
      then
        case "$prev" in
            "remove"|"repackage")
              local box_list=$(find $HOME/.vagrant/boxes/* -maxdepth 0 -type d -printf '%f ')
              COMPREPLY=($(compgen -W "${box_list}" -- ${cur}))
              return 0
              ;;
            *)
            ;;
        esac
      fi
    fi

}
if [[  $SHELL == "bash" ]]; then
  complete -F _vagrant vagrant
fi

