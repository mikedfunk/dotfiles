[xdebug]

; Type: boolean, Default value: 0 Normally you need to use a specific HTTP
; GET/POST variable to start remote debugging (see Remote Debugging). When this
; setting is set to 1, Xdebug will always attempt to start a remote debugging
; session and try to connect to a client, even if the GET/POST/COOKIE variable
; was not present.
; xdebug.remote_autostart=on

; Type: integer, Default value: 0, Introduced in Xdebug > 2.2
; If this setting is 1, Xdebug will color var_dumps and stack traces output when
; in CLI mode and when the output is a tty. On Windows, the ANSICON tool needs to
; be installed.
; If the setting is 2, then Xdebug will always color var_dumps and stack trace,
; no matter whether it's connected to a tty or whether ANSICON is installed. In
; this case, you might end up seeing escape codes.
xdebug.cli_color=on

; Type: string, Default value: , Introduced in Xdebug > 2.1
; This setting determines the format of the links that are made in the display of
; stack traces where file names are used. This allows IDEs to set up a
; link-protocol that makes it possible to go directly to a line and file by
; clicking on the filenames that Xdebug shows in stack traces.
xdebug.file_link_format="file://"

; Type: integer, Default value: 100
; Controls the protection mechanism for infinite recursion protection. The value
; of this setting is the maximum level of nested functions that are allowed
; before the script will be aborted.
xdebug.max_nesting_level=250

; Type: integer, Default value: 0
; When this setting is set to 1, you can trigger the generation of profiler files
; by using the XDEBUG_PROFILE GET/POST parameter, or set a cookie with the name
; XDEBUG_PROFILE. This will then write the profiler data to defined directory. In
; order to prevent the profiler to generate profile files for each request, you
; need to set xdebug.profiler_enable to 0. Access to the trigger itself can be
; configured through xdebug.profiler_enable_trigger_value.
; xdebug.profiler_enable_trigger=on

; Type: string, Default value: localhost
; Selects the host where the debug client is running, you can either use a host
; name or an IP address. This setting is ignored if xdebug.remote_connect_back is
; enabled.
; xdebug.remote_host="192.168.56.1"
xdebug.remote_host="127.0.0.1"

; Type: boolean, Default value: 0, Introduced in Xdebug > 2.1
; If enabled, the xdebug.remote_host setting is ignored and Xdebug will try to
; connect to the client that made the HTTP request. It checks the
; $_SERVER['REMOTE_ADDR'] variable to find out which IP address to use. Please
; note that there is no filter available, and anybody who can connect to the
; webserver will then be able to start a debugging session, even if their address
; does not match xdebug.remote_host.
; xdebug.remote_connect_back=on
;
; Type: boolean, Default value: 0
; This switch controls whether Xdebug should try to contact a debug client which
; is listening on the host and port as set with the settings xdebug.remote_host
; and xdebug.remote_port. If a connection can not be established the script will
; just continue as if this setting was 0.
xdebug.remote_enable=on

; Type: integer, Default value: 9000
; The port to which Xdebug tries to connect on the remote host. Port 9000 is the
; default for both the client and the bundled debugclient. As many clients use
; this port number, it is best to leave this setting unchanged.
xdebug.remote_port=9001

; Type: string, Default value:
; If set to a value, it is used as filename to a file to which all remote
; debugger communications are logged. The file is always opened in append-mode,
; and will therefore not be overwritten by default. There is no concurrency
; protection available.
xdebug.remote_log="/var/log/xdebug.log"

; Type: boolean, Default value: 0, Introduced in Xdebug >= 2.1
; If this setting is 1, then Xdebug will disable the @ (shut-up) operator so that
; notices, warnings and errors are no longer hidden.
; xdebug.scream=1

; Type: integer, Default value: 0
; When this setting is set to something != 0 Xdebug's generated stack dumps in
; error situations will also show all variables in the top-most scope. Beware
; that this might generate a lot of information, and is therefore turned off by
; default.
; xdebug.show_local_vars=1

; Type: boolean, Default value: 0, Introduced in Xdebug > 2.2
; When this setting is set to 1, you can trigger the generation of trace files by
; using the XDEBUG_TRACE GET/POST parameter, or set a cookie with the name
; XDEBUG_TRACE. This will then write the trace data to defined directory. In
; order to prevent Xdebug to generate trace files for each request, you need to
; set xdebug.auto_trace to 0. Access to the trigger itself can be configured
; through xdebug.trace_enable_trigger_value.
; xdebug.trace_enable_trigger=on

; Type: string, Default value: *complex*
; Controls which IDE Key Xdebug should pass on to the DBGp debugger handler. The
; default is based on environment settings. First the environment setting
; DBGP_IDEKEY is consulted, then USER and as last USERNAME. The default is set to
; the first environment variable that is found. If none could be found the
; setting has as default ''. If this setting is set, it always overrides the
; environment variables.
xdebug.idekey="mikedfunkxd"

; Type: integer, Default value: 0
; Enables Xdebug's profiler which creates files in the profile output directory.
; Those files can be read by KCacheGrind to visualize your data. This setting can
; not be set in your script with ini_set(). If you want to selectively enable the
; profiler, please set xdebug.profiler_enable_trigger to 1 instead of using this
; setting.
; WARNING slows down php to 1/3 of normal speed!!
; xdebug.profiler_enable = 1

; memory_limit = 1012M
memory_limit = 2024M
short_open_tag=on

[Date]
date.timezone = America/Los_Angeles
; date.timezone = America/New_York
; date.default_latitude  = 33.93
; date.default_longitude =  118.40

; error_reporting = E_ALL
; error_reporting = -1
;
; racingjunk:
; error_reporting = E_ALL & ~E_NOTICE & ~E_WARNING & ~E_STRICT & ~E_DEPRECATED
;
; preferred:
; from php.net
; error_reporting = E_ERROR | E_WARNING | E_PARSE | E_NOTICE
; error_reporting = E_ERROR | E_STRICT
; error_reporting = E_ALL ^ E_NOTICE ^ E_WARNING
error_reporting = E_ALL & ~E_DEPRECATED
display_errors=on
; display_errors=off
display_startup_errors=on
html_errors=on
output_buffering = 8192

[Phar]
phar.readonly=false

; include_path = ".:/Users/mfunk/.pear/share/pear"

allow_url_fopen=1
; how to enable openssl??
