extends html

snippet prt "print_r true"
print_r(${1}, true)${2}
endsnippet

snippet fail "phpunit incomplete test"
$this->markTestIncomplete();${1}
endsnippet

snippet author

/**
 * ${1}
 *
 * @package ${2}
 * @author Michael Funk <mfunk@spinmedia.com>
 * @copyright 2013 SpinMedia, Inc. All Rights Reserved.
 */

endsnippet

snippet mock
$1 = $this->getMock('$2');
$1->expects($this->any())
    ->method('$4')
    ->will($this->returnValue(${5:true}));
endsnippet

snippet construct "laravel 4 DI construct"

/**
 * dependency injection
 *
 * @param $1 $$2
 */
public function __construct(${1:UserRepositoryInterface} $${2:user})
{
    $this->$2 = $$2;
}
endsnippet

snippet php "opening php tag"
<?php
$1
endsnippet

snippet cla "mike's class with namespace, file and class docblocks"
<?php
/**
 * @package ${2:ExampleBlog}
 * @copyright `date +%Y` SpinMedia, Inc. All Rights Reserved.
 */
namespace ${3:SpinMedia\ExampleBlog};

/**
 * ${4:ClassName}
 *
 * @author `!v g:snips_author`
 */
class $4 $5
{
    $6
}
endsnippet

snippet meth "php method"

/**
 * $2
 *
 * @return ${4:void}
 */
public function ${2:functionname}(${3})
{
    $5
}
endsnippet

snippet interface
interface ${1:MyRepository}
{
    $2
}
endsnippet

snippet va "var with docblock"

/**
 * @var ${1:mixed}
 */
protected ${2:$myvar};

endsnippet

snippet varblock "var docblock"
/**
 * ${1:description}
 *
 * @var ${2:mixed}
 * @access ${3:public}
 */
endsnippet

snippet pageblock "page level docblock"
/**
 * @package ${2:Template}
 * @copyright `date +%Y` SpinMedia, Inc. All Rights Reserved.
 */
$3
endsnippet

snippet classblock "class level docblock"

/**
 * ${1:title}
 *
 * @author `!v g:snips_author`
 */$3
endsnippet


snippet methodblock "method level docblock"

/**
 * ${1:title}
 *
 * @param ${2:string $myvar my description here}
 */
endsnippet

snippet lang "laravel Lang::get()"
Lang::get('$1')
endsnippet

snippet view "View::make"
return View::make('$1');
endsnippet

snippet -- "// ---"
// ------------------------------------------------------------------------
endsnippet

snippet me "@author"
@author Michael Funk <mfunk@spinmedia.com>
endsnippet

snippet uns "Laravel Unsigned Integer"
$table->unsignedInteger('$1');
endsnippet

snippet forn "Laravel Foreign Key"
$table->foreign('$1')->references('id')->on('$2');
endsnippet

snippet soft "Laravel Soft Delete"
$table->softDeletes();
endsnippet

snippet vd "var_dump and exit"
var_dump($1); exit;
endsnippet

snippet cfg "SpinMedia config"
<?php

return array(
    'url' => 'http://mf.${1:prefix}1.lucid-dev.bno/',
);
endsnippet

snippet call "Laravel http call"
$this->call('${1:GET}', ${2:myurl});
endsnippet
