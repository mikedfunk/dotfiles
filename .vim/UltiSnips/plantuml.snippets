snippet uml "start and end uml"
' ---------------------------
' General
'
' this is a comment
/' this is a multiline comment '/
' you can set different styles for namespace separators:
' set namespaceSeparator _
' set namespaceSeparator .
' set namespaceSeparator \\\\
' NOTE if you set it php style to backslash you'll have to double-backslash all namespace separators :/ backslash is escape syntax in plantuml, so that's the only way to really do it besides wrapping classes in `namespace MyNamespace { ... }`
' ----------------------------
' Sequence diagram example
'
' @startuml
' title Resale Logic Flow
' actor User
' User -> IndexController : submitOfferAction()
' IndexController -> ResaleService : submitOffer(string $firstName, string $lastName, string $email, string $sku)
' ResaleService -> ArtworkRepository : getCouchArtItemByArtIdAndArtistId($artId, $artistId)
' ArtworkRepository -> ResaleService : $couchArtItem
' ResaleService -> Zend_View : render(string $path)
' Zend_View -> ResaleService: $zendView
' ResaleService -> Zendesk : prepareUserId($data)
' Zendesk -> ResaleService : $zendeskUserId
' ResaleService -> Zendesk : submitTicket($data)
' @enduml

' ----------------------------
' Activity diagram example
'
' @startuml
' :Arbitrary step 1;
' :Arbitrary step 2;
' if (my condition) then (yes)
'   :Conditional step 3;
'   :Conditional step 4;
'   ' stop will show a black circle; end will show a circle with a black x
'   stop
' else (no)
'   :Conditional step 5;
'   stop
' endif
' @enduml

' -----------------------------
' class diagram example
'
' @startuml
' ' zend-style pseudo-namespacing
' set namespaceSeparator _
' class Saatchi_Controller {
' }
'
' class Resale_IndexController {
'     + submitOfferAction()
' }
'
' class Zend_View {
'     + setScriptPath(string $path): void
'     + assign(string $key, mixed $value): void
'     + render(string $viewPath): string
' }
'
' ' now set the namespace separator to standard php
' set namespaceSeparator \\
' class DemandMedia\\SaatchiArt\\Service\\Resale {
'     + submitOffer(string $firstName, string $lastName, string $email, string $sku): void
' }
'
' class DemandMedia\\SaatchiArt\\Repository\\ArtworkRepository {
'     + getCouchArtItemByArtIdAndArtistId(int $userArtId, int $userId): Model_Render_CouchArtItem|null
' }
'
' class Zendesk\\Zendesk {
'     + submitTicket(array $ticketData, bool $public): \\stdClass
'     + prepareZendeskUserId(array $requesterData): int
' }
'
' class DemandMedia\\SaatchiArt\\Transformer\\Resale\\ArtworkData {
'     + transform(Model_Render_CouchArtItem $couchArtItem, Saatchi_Product_Sku $sku): array
' }
'
' Saatchi_Controller <-- Resale_IndexController
' Resale_IndexController *-- DemandMedia\\SaatchiArt\\Service\\Resale
' DemandMedia\\SaatchiArt\\Service\\Resale *-- DemandMedia\\SaatchiArt\\Repository\\ArtworkRepository
' DemandMedia\\SaatchiArt\\Service\\Resale *-- Zend_View
' DemandMedia\\SaatchiArt\\Service\\Resale *-- Zendesk\\Zendesk
' DemandMedia\\SaatchiArt\\Service\\Resale *-- DemandMedia\\SaatchiArt\\Transformer\\Resale\\ArtworkData
' @enduml
@startuml
$0
@enduml
endsnippet
